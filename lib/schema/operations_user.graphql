query GetAuthenticatedUser {
    getAuthenticatedUser {
        id
        email
        fullName
        avatarUrl
        userHandle
        profileCompletionPercentage
        updatedAt
        createdAt
        seeksHelp
        offersHelp
        groupMemberships {
            id
            groupIdent
        }
    }
}

query MyUserSearches {
    myUserSearches {
        topFoundUsers {
            id
            email
            firstName
            lastName
            fullName
            avatarUrl
            userHandle
            offersHelp
            seeksHelp
            jobTitle
            countryOfResidence {
                translatedValue
            }
            groupMemberships {
                groupIdent
                ... on MentorsGroupMembership {
                    expertises {
                        translatedValue
                    }
                    industries {
                        translatedValue
                    }
                    endorsements
                }
                ... on MenteesGroupMembership {
                    soughtExpertises {
                        translatedValue
                    }
                    industry {
                        translatedValue
                    }
                }
            }
            companies {
                name
                companyStage {
                    translatedValue
                }
                companyType {
                    translatedValue
                }
            }
        }
        runInfos {
        finishedAt
        matchCount
        topUserIds
        }
        updatedAt
    }
}

query FindUserSearch($userSearchId: String!) {
    findUserSearchById(userSearchId: $userSearchId) {
        runInfos {
            finishedAt
            matchCount
        }
    }
}

query FindUserSearchResults($userSearchId: String!, $options: FindObjectsOptions) {
    findUserSearchResults(userSearchId: $userSearchId, options: $options) {
        id
        email
        firstName
        lastName
        fullName
        avatarUrl
        userHandle
        offersHelp
        seeksHelp
        jobTitle
        cityOfResidence
        regionOfResidence
        countryOfResidence {
            translatedValue
        }
        groupMemberships {
            groupIdent
            ... on MentorsGroupMembership {
                expertises {
                    translatedValue
                }
                endorsements
            }
            ... on MenteesGroupMembership {
                soughtExpertises {
                    translatedValue
                }
            }
        }
        companies {
            name
        }
    }
}

query FindRecommendedUsers($options: FindObjectsOptions, $filter: UserListFilter, $match: UserInput) {
    findUsers(options: $options, filter: $filter, match: $match) {
        id
        email
        firstName
        lastName
        fullName
        avatarUrl
        userHandle
        cityOfResidence
        regionOfResidence
        offersHelp
        seeksHelp
        companies {
            name
            companyStage {
                translatedValue
            }
            industries
        }
        countryOfResidence {
            textId
            translatedValue
        }
        jobTitle
        groupMemberships {
            groupId
            ... on MenteesGroupMembership {
                soughtExpertises {
                    textId
                    translatedValue
                }
                industry {
                    textId
                    translatedValue
                }
            }
            ... on MentorsGroupMembership {
                expertises {
                    textId
                    translatedValue
                }
                industries {
                    textId
                    translatedValue
                }
                endorsements
            }
        }
    }
}

query FindUserDetailedProfile($userId: String!) {
    findUserById(id: $userId) {
        id
        firstName
        lastName
        fullName
        email
        userHandle
        offersHelp
        seeksHelp
        websites {
            value
            label # label == "linkedin" for the linkedin button
        }
        preferredLanguage {
            translatedValue
        }
        spokenLanguages {
            translatedValue
        }
        avatarUrl # not yet functional
        groupMemberships {
            groupId
            groupIdent
            ... on MentorsGroupMembership {
                expertises {
                    translatedValue
                    # icon not yet defined, coming later
                }
                industries {
                    translatedValue
                    # icon not yet defined, coming later
                }
                endorsements # just a number for now, not yet defined as an object
                expectationsForMentees
                # TODO: implement mentoring preferences
            }
            ... on MenteesGroupMembership {
                soughtExpertises {
                    translatedValue
                }
                industry {
                    translatedValue
                }
                reasonsForStartingBusiness
                # business mission not defined, use companies[0].description instead
            }
        }
        jobTitle
        companies {
            name # venture name
            description # "business mission" can be drawn from here for now
            websites {
                value # url
                label # type of website. might not be relevant
            }
            companyStage {
                translatedValue
            }
            companyType {
                translatedValue
            }
            # we may need to add city/state/country to this model for the mentee
        }
        educationLevel {
            translatedValue
        }
        pronounsDisplay # this handles some display logic, "she/they" for a user with both "they/them" and "she/her" pronouns
        pronouns {
            translatedValue # e.g. "she/her"
        }
        businessExperiences {
            businessName
            jobTitle
            startDate
            endDate
            city
            state
            country
        }
        academicExperiences {
            institutionName
            degreeType
            fieldOfStudy
            startDate
            endDate
        }
        cityOfResidence
        regionOfResidence
        countryOfResidenceTextId
        countryOfResidence {
            translatedValue
        }
        cityOfOrigin
        regionOfOrigin
        countryOfOriginTextId
        countryOfOrigin {
            translatedValue
        }
    }
}

query FindUserQuickViewProfile($userId: String!) {
    findUserById(id: $userId) {
        id
        avatarUrl
        fullName
        regionOfResidence
        cityOfResidence
        countryOfResidence {
            translatedValue
        }
        jobTitle
        companies {
            name
        }
        offersHelp
        seeksHelp
        groupMemberships {
            groupIdent
            ... on MenteesGroupMembership {
                soughtExpertises {
                    translatedValue
                }
            }
            ... on MentorsGroupMembership {
                expertises {
                    translatedValue
                }
            }
        }
    }
}

mutation CreateUserSearch($input: UserSearchInput!) {
    createUserSearch(input: $input) {
        id
    }
}

mutation SignInUser ($input: UserSignInInput!) {
    signInUser(input: $input) {
        userId
        deviceId
        authToken
    }
}

mutation SignOutUser {
    signMeOut
}

mutation SignUpUser ($input: UserSignUpInput!) {
    signUpUser(input: $input) {
        userId
        deviceId
        authToken
    }
}

mutation UpdateMenteesGroupMembership($input: MenteesGroupMembershipInput!) {
    updateMenteesGroupMembership(input: $input) {
        id
    }
}

mutation UpdateMentorsGroupMembership($input: MentorsGroupMembershipInput!) {
    updateMentorsGroupMembership(input: $input) {
        id
    }
}

mutation UpdateUser ($input: UserInput!) {
    updateUser(input: $input)
}
